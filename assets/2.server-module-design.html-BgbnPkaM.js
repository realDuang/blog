import{_ as e,r as o,o as c,c as l,a as s,d as n,e as t,b as p}from"./app-BgGkuvCY.js";const i={},u=p('<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>在了解了 VS Code 的通信机制后，我们可以着手分析 VS Code Server 中各模块的实现以及设计思路了。</p></div><h2 id="vscode-server-模块设计" tabindex="-1"><a class="header-anchor" href="#vscode-server-模块设计"><span>VSCode Server 模块设计</span></a></h2><p>通过之前的介绍我们可以了解到，VS Code 的能力是前后端分离的，这使得 <code>remote server</code> 的改造实现变得简单。</p><p><img src="https://zakum-1252497671.cos.ap-guangzhou.myqcloud.com/20221009135447.png" alt="20221009135447"></p><p>通过这一张架构图，我们可以直观的看到在 VS Code 中，前后端能力职责的划分。</p><p>可以看出，除了少数的一些像本地文件上传，语法高亮、主题设置等能力，一些重依赖多进程通信、OS支持，语言编译的能力都被设计在了 Server 端中，以保证 Client 端足够的轻量简洁，可以运行在 Web 这样的轻环境中。</p><p>在本篇中，我来带大家浅要分析 Server 端的几个重要模块的设计思路与实现。</p><h2 id="remote-file-system-设计" tabindex="-1"><a class="header-anchor" href="#remote-file-system-设计"><span>Remote File System 设计</span></a></h2><p><code>Remote File System</code> 负责处理文件系统的读写操作，同时还需要处理文件系统的变化事件，以便于客户端能够实时更新文件系统的变化。在 VSCode 中，它封装了一层 <code>Virtual file system</code> 来实现对不同文件系统的兼容控制。</p>',9),r={href:"https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API",target:"_blank",rel:"noopener noreferrer"},k=p(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getTheFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// open file picker</span>
  <span class="token punctuation">[</span>fileHandle<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> window<span class="token punctuation">.</span><span class="token function">showOpenFilePicker</span><span class="token punctuation">(</span>pickerOpts<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// get file contents</span>
  <span class="token keyword">const</span> fileData <span class="token operator">=</span> <span class="token keyword">await</span> fileHandle<span class="token punctuation">.</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),d={href:"https://github.com/microsoft/vscode/blob/dc8bd9cd7e5231745549ac6218266c63271f48cd/src/vs/vscode.d.ts#L7038",target:"_blank",rel:"noopener noreferrer"},v=p(`<p>这里使用 <code>vscode-vfs</code> 这个库来实现虚拟文件系统。这是一个 URI 方案，它注册了 <code>File System Provider</code>，并且该文件系统上的资源将由使用该模式的 URI 表示(例如<code>vscode-vfs://vscode/package.json</code>)。</p><p>因此，直接打开远程存储库也得以实现，例如 <code>Github Codespaces</code> 的打开就是这样实现的。</p><p>使用 <code>vscode-vfs://github/microsoft/vscode</code>， 通过访问 <code>https://github.com/microsoft/vscode</code>，就能够在不进行 <code>git clone</code>的情况下，直接打开项目文件夹了。</p><p>实例化后，全局都可以通过传入 <code>RuntimeEnvironment</code>，通过 <code>runtime.fs</code> 来访问与调用。</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">async</span> <span class="token function">stat</span><span class="token punctuation">(</span>uri<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>FileStat<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>fileFs <span class="token operator">&amp;&amp;</span> uri<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;file:&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> fileFs<span class="token punctuation">.</span><span class="token function">stat</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> connection<span class="token punctuation">.</span><span class="token function">sendRequest</span><span class="token punctuation">(</span>FsStatRequest<span class="token punctuation">.</span>type<span class="token punctuation">,</span> uri<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">readDirectory</span><span class="token punctuation">(</span>uri<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> FileType<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>fileFs <span class="token operator">&amp;&amp;</span> uri<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;file:&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> fileFs<span class="token punctuation">.</span><span class="token function">readDirectory</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> connection<span class="token punctuation">.</span><span class="token function">sendRequest</span><span class="token punctuation">(</span>FsReadDirRequest<span class="token punctuation">.</span>type<span class="token punctuation">,</span> uri<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当然，对于不支持这套 API 的浏览器来说，打开时会检测接口，弹出警告。</p><p><img src="https://zakum-1252497671.cos.ap-guangzhou.myqcloud.com/20221009144016.png" alt="20221009144016"></p><p>至于解决方式，之前说过，VSCode 的 server 端是同构的，server 自然也能提供本地文件系统支持，仍可以通过浏览器的上传 API 来实现。</p><h2 id="remote-terminal-process-设计" tabindex="-1"><a class="header-anchor" href="#remote-terminal-process-设计"><span>Remote Terminal Process 设计</span></a></h2><p><img src="https://zakum-1252497671.cos.ap-guangzhou.myqcloud.com/20221009181331.png" alt="20221009181331"></p><p>这里实际上是复用了VSCode 之前推出的 <code>Remote-Server extension</code> 能力，通过 SSH 隧道的方式，将终端的输入输出流转发到远程服务器上。(再一次说明了为什么强制要求在HTTPS下使用)</p><p>还记得我们之前提到过的，<code>Channel</code> 为通信的最小单元吗？<code>VSCode Server</code> 的 <code>Remote Terminal</code> 就是通过一个 <code>RemoteTerminalChannel</code> 来实现的。</p><p>通过监听与触发不同的事件(如<code>onExecuteCommand</code>, <code>sendCommandResult</code>)，来实现对 <code>Remote Terminal</code> 的不同行为的信息同步。</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code>    <span class="token keyword">async</span> <span class="token function">call</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> RemoteAgentConnectionContext<span class="token punctuation">,</span> command<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> args<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>command<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$restartPtyHost&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span>restartPtyHost<span class="token operator">?.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">case</span> <span class="token string">&#39;$createProcess&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">const</span> uriTransformer <span class="token operator">=</span> <span class="token function">createURITransformer</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>remoteAuthority<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_createProcess</span><span class="token punctuation">(</span>uriTransformer<span class="token punctuation">,</span> <span class="token operator">&lt;</span>ICreateTerminalProcessArguments<span class="token operator">&gt;</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$attachToProcess&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span><span class="token function">attachToProcess</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$detachFromProcess&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span><span class="token function">detachFromProcess</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">case</span> <span class="token string">&#39;$listProcesses&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span><span class="token function">listProcesses</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$orphanQuestionReply&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span><span class="token function">orphanQuestionReply</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$acceptPtyHostResolvedVariables&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span>acceptPtyHostResolvedVariables<span class="token operator">?.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">case</span> <span class="token string">&#39;$start&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$input&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span><span class="token function">input</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$acknowledgeDataEvent&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span><span class="token function">acknowledgeDataEvent</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$shutdown&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$resize&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$getInitialCwd&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span><span class="token function">getInitialCwd</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$getCwd&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span><span class="token function">getCwd</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">case</span> <span class="token string">&#39;$processBinary&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span><span class="token function">processBinary</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">case</span> <span class="token string">&#39;$sendCommandResult&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_sendCommandResult</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> args<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$installAutoReply&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span><span class="token function">installAutoReply</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$uninstallAllAutoReplies&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span><span class="token function">uninstallAllAutoReplies</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$getDefaultSystemShell&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_getDefaultSystemShell</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$getProfiles&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_getProfiles</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$getEnvironment&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$getWslPath&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_getWslPath</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$getTerminalLayoutInfo&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span><span class="token function">getTerminalLayoutInfo</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>IGetTerminalLayoutInfoArgs<span class="token operator">&gt;</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$setTerminalLayoutInfo&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span><span class="token function">setTerminalLayoutInfo</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>ISetTerminalLayoutInfoArgs<span class="token operator">&gt;</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$serializeTerminalState&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span><span class="token function">serializeTerminalState</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$reviveTerminalProcesses&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span><span class="token function">reviveTerminalProcesses</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$getRevivedPtyNewId&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span><span class="token function">getRevivedPtyNewId</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$setUnicodeVersion&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span><span class="token function">setUnicodeVersion</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$reduceConnectionGraceTime&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_reduceConnectionGraceTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$updateIcon&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span><span class="token function">updateIcon</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$updateTitle&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span><span class="token function">updateTitle</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$updateProperty&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span><span class="token function">updateProperty</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$refreshProperty&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span><span class="token function">refreshProperty</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$requestDetachInstance&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span><span class="token function">requestDetachInstance</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$acceptDetachedInstance&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span><span class="token function">acceptDetachInstanceReply</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$freePortKillProcess&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span>freePortKillProcess<span class="token operator">?.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">IPC Command </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>command<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> not found</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">listen</span><span class="token punctuation">(</span>_<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> event<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> arg<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> Event<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$onPtyHostExitEvent&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span>onPtyHostExit <span class="token operator">||</span> Event<span class="token punctuation">.</span>None<span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$onPtyHostStartEvent&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span>onPtyHostStart <span class="token operator">||</span> Event<span class="token punctuation">.</span>None<span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$onPtyHostUnresponsiveEvent&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span>onPtyHostUnresponsive <span class="token operator">||</span> Event<span class="token punctuation">.</span>None<span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$onPtyHostResponsiveEvent&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span>onPtyHostResponsive <span class="token operator">||</span> Event<span class="token punctuation">.</span>None<span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$onPtyHostRequestResolveVariablesEvent&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span>onPtyHostRequestResolveVariables <span class="token operator">||</span> Event<span class="token punctuation">.</span>None<span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$onProcessDataEvent&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span>onProcessData<span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$onProcessReadyEvent&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span>onProcessReady<span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$onProcessExitEvent&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span>onProcessExit<span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$onProcessReplayEvent&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span>onProcessReplay<span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$onProcessOrphanQuestion&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span>onProcessOrphanQuestion<span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$onExecuteCommand&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onExecuteCommand<span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$onDidRequestDetach&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span>onDidRequestDetach <span class="token operator">||</span> Event<span class="token punctuation">.</span>None<span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&#39;$onDidChangeProperty&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_ptyService<span class="token punctuation">.</span>onDidChangeProperty<span class="token punctuation">;</span>
            <span class="token keyword">default</span><span class="token operator">:</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;Not supported&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="extension-processes-设计" tabindex="-1"><a class="header-anchor" href="#extension-processes-设计"><span>Extension Processes 设计</span></a></h2><h3 id="存储位置" tabindex="-1"><a class="header-anchor" href="#存储位置"><span>存储位置</span></a></h3><p>VSCode Server 会将通过 <code>code-server --install-extension &lt;extension id&gt;</code> 命令安装的 extensions 存储在 <code>$XDG_DATA_HOME/code-server/extensions</code> 下。</p>`,17),y=s("code",null,"~/.vscode",-1),m={href:"https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync",target:"_blank",rel:"noopener noreferrer"},w=s("h3",{id:"插件分类",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#插件分类"},[s("span",null,"插件分类")])],-1),g=s("p",null,[n("VSCode 将插件分为了 "),s("code",null,"UI Extension"),n(" 与 "),s("code",null,"Workspace Extension"),n(" 两种，通过 "),s("code",null,"extensionKind"),n(" 字段进行指定。")],-1),h={href:"https://code.visualstudio.com/api/references/vscode-api",target:"_blank",rel:"noopener noreferrer"},b=s("code",null,"UI Extension",-1),f={href:"https://code.visualstudio.com/api/references/vscode-api",target:"_blank",rel:"noopener noreferrer"},S=p(`<p>但如果功能涉及到运行时的系统级调用，则需要被定义为<code>Workspace Extension</code>，它可以完全访问源码、文件系统、以及大部分 <code>OS API</code>。</p><p><code>Workspace Extension</code> 需要安装在服务端，并需要在插件中显式声明。</p><p>体现在编码规范上，我们需要为插件项目的 <code>package.json</code> 文件中添加 <code>main</code> 的 entrypoint，以执行服务端插件调用，而 <code>UI Extension</code> 的 entrypoint 使用 <code>browser</code> 表示。</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./dist/node/extension.js&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;browser&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./dist/browser/extension.js&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;capabilities&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;virtualWorkspaces&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
    ...
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>逻辑上，插件需要根据 web 端与 server 端分开编写，并自行做好兼容。</p><p><img src="https://zakum-1252497671.cos.ap-guangzhou.myqcloud.com/20221010111137.png" alt="20221010111137"></p>`,6);function _(P,x){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,s("p",null,[n("这一部分是 VSCode Server 的核心中最容易实现的部分。它本质上就是使依赖现代浏览器的 "),s("a",r,[n("File_System_Access_API"),t(a)]),n(" 来实现的(强制在 HTTPS 下使用)。")]),k,s("p",null,[n("具体的代码声明位置见 "),s("a",d,[n("FileSystemProvider"),t(a)]),n("。")]),v,s("p",null,[n("用户配置信息存储在本地的"),y,n(" 下，使用官方的 "),s("a",m,[n("Settings Sync"),t(a)]),n(" 插件进行配置漫游。")]),w,g,s("p",null,[n("如果不涉及到 Node.js 调用的简单插件，是纯声明性质的代码的话(例如 Themes、key-binding，或者能直接利用"),s("a",h,[n("客户端 API"),t(a)]),n(" 能覆盖能力的插件等)，则可以定义为 "),b,n("，直接在客户端中执行，服务端只保存插件的配置信息，无需进行通信。")]),s("p",null,[n("这也是为什么 vscode.dev 中(截至目前位置，该网页不包含 Server 能力)，所有的主题、包括例如 TS、Python、Markdown、HTML 等语言的文件补全、语法高亮、括号着色都是可以正常使用的原因。因为在架构上，这些能力都是由客户端的内置插件(语言补全等相关特性是通过专门编写的 web worker thread 旁路执行)提供的，通过 "),s("a",f,[n("VSCode API"),t(a)]),n(" 直接进行调用。")]),S])}const R=e(i,[["render",_],["__file","2.server-module-design.html.vue"]]),C=JSON.parse('{"path":"/blogs/vscode-for-web/2.server-module-design.html","title":"VS Code For Web 深入浅出 -- Server 模块设计篇","lang":"en-US","frontmatter":{"title":"VS Code For Web 深入浅出 -- Server 模块设计篇","date":"2022-11-02T20:49:33.000Z","categories":["VSCode For Web 深入浅出"],"tags":["VS Code","VS Code For Web"]},"headers":[{"level":2,"title":"VSCode Server 模块设计","slug":"vscode-server-模块设计","link":"#vscode-server-模块设计","children":[]},{"level":2,"title":"Remote File System 设计","slug":"remote-file-system-设计","link":"#remote-file-system-设计","children":[]},{"level":2,"title":"Remote Terminal Process 设计","slug":"remote-terminal-process-设计","link":"#remote-terminal-process-设计","children":[]},{"level":2,"title":"Extension Processes 设计","slug":"extension-processes-设计","link":"#extension-processes-设计","children":[{"level":3,"title":"存储位置","slug":"存储位置","link":"#存储位置","children":[]},{"level":3,"title":"插件分类","slug":"插件分类","link":"#插件分类","children":[]}]}],"git":{"createdTime":1716360538000,"updatedTime":1716360538000,"contributors":[{"name":"Duang Cheng","email":"longcheng@microsoft.com","commits":1}]},"filePathRelative":"blogs/vscode-for-web/2.server-module-design.md"}');export{R as comp,C as data};
