import{_ as a,o as e,c as t,b as i}from"./app-D7BFNZkS.js";const r={},o=i('<p>Kafka 是一个目前由 Apache 软件基金会接管的一个开源流处理平台，是一种高吞吐量的基于发布-订阅模式的分布式日志收集和消息系统，它能通过 O(1) 的磁盘数据结构提供消息的持久化，使得其读写性能十分优异。</p><h2 id="kafka-概念介绍" tabindex="-1"><a class="header-anchor" href="#kafka-概念介绍"><span>Kafka 概念介绍</span></a></h2><p>首先，Kafka 作为一个基于发布订阅模式的消息系统，一定少不了生产者 (producer) 与消费者 (consumer) 作为链路的两端。除此之外，Kafka 中还提出了一些特性，正是这些特性帮助我们解耦消息队列的处理过程，并增强其可扩展能力。</p><p>其架构链路图如下：</p><p><img src="https://zakum-1252497671.cos.ap-guangzhou.myqcloud.com/kafka20210513113211.png" alt="kafka"></p><h3 id="broker" tabindex="-1"><a class="header-anchor" href="#broker"><span>Broker</span></a></h3><p>Kafka 处理集群可以包含一个或多个提供消息处理的服务器节点，这些服务器节点称为 broker。Kafka 的 Broker 集群原生支持分布式，同一个集群中的节点自动实现负载均衡。</p><h3 id="topic" tabindex="-1"><a class="header-anchor" href="#topic"><span>Topic</span></a></h3><p>每条发布到 Kafka 集群的消息都有一个类别，这个类别被称为 Topic。它在逻辑上可以被认为是一个消息队列的存放单位，因此在生产与消费数据时，都需要指定 Topic。物理上不同 Topic 的消息分开存储，逻辑上一个 Topic 的消息虽然保存于一个或多个 broker 上但用户只需指定消息的 Topic 即可生产或消费数据而不必关心数据存于何处。</p><h3 id="partition" tabindex="-1"><a class="header-anchor" href="#partition"><span>Partition</span></a></h3><p>每一个 Topic 的数据可以分割成一份或多份，每一份数据存放于一个 Partition 中。相较于 Topic，Partition 更偏向与物理上的概念。Partition 中的数据使用多个 segment 文件存储。在同一个 Partition 内，数据是有序的。而若在同一个 Topic 中存在多个 Partition，Cosumer 在消费时便不能保证 Partition 间数据的顺序。</p><p>此外，Kafka 为了实现高可用性，还对 Brokers 设计了选举淘汰机制以保证相应的唯一性，对 Producer 产生的消息进行消息路由，并对可能的产生的网络故障进行消息传递保障等等。在此不多做赘述，感兴趣的同学可以自行了解。</p>',12),n=[o];function c(p,l){return e(),t("div",null,n)}const k=a(r,[["render",c],["__file","2021-05-07.html.vue"]]),h=JSON.parse('{"path":"/draft/2021-05-07.html","title":"利用 kafka 做一个上报服务","lang":"en-US","frontmatter":{"title":"利用 kafka 做一个上报服务","date":"2021-05-07T19:23:58.000Z","tags":null},"headers":[{"level":2,"title":"Kafka 概念介绍","slug":"kafka-概念介绍","link":"#kafka-概念介绍","children":[{"level":3,"title":"Broker","slug":"broker","link":"#broker","children":[]},{"level":3,"title":"Topic","slug":"topic","link":"#topic","children":[]},{"level":3,"title":"Partition","slug":"partition","link":"#partition","children":[]}]}],"git":{"createdTime":1716368266000,"updatedTime":1716368266000,"contributors":[{"name":"Duang Cheng","email":"longcheng@microsoft.com","commits":1}]},"filePathRelative":"draft/2021-05-07.md"}');export{k as comp,h as data};
