(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{596:function(e,s,t){"use strict";t.r(s);var r=t(11),a=Object(r.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("p",[e._v("最近我在浏览 VSCode for web 的 repo，在最近更新的一些 commit 中发现了一个新的 VSCode 插件特性支持，名为 "),t("code",[e._v("webOpener")]),e._v("，它的作用是什么呢？又是如何影响插件加载的呢？在这一篇中我们结合 VSCode For Web 的插件加载机制来详细分析一下。")])]),e._v(" "),t("h2",{attrs:{id:"vscode-for-web-的插件加载机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vscode-for-web-的插件加载机制"}},[e._v("#")]),e._v(" VSCode for web 的插件加载机制")]),e._v(" "),t("p",[e._v("我们知道，由于 VSCode for web 运行在浏览器上，因此，它的插件加载机制与 VSCode for desktop 有所不同。")]),e._v(" "),t("p",[e._v("在 VSCode for desktop 中，插件是以 vsix 包的形式存在的，因此，VSCode for desktop 可以直接通过 vsix 包的形式加载插件。而在 VSCode for web 中，由于浏览器的安全机制，不能直接加载 vsix 包。")]),e._v(" "),t("p",[e._v("因此，VSCode for web 采用了一种特殊的插件加载机制。发布 VSCode for web 插件时，发布系统会直接将项目编译，并发布到 CDN 节点上。当用户加载插件时，通过向该目标 url 发送请求，拉取远端（也可以是本地）的 "),t("code",[e._v("extension.js")]),e._v(" 文件。并利用 web worker 加载机制，为每个插件分配独立线程加载与执行。")]),e._v(" "),t("p",[e._v("在生产环境中，对每个进入 VSCode 插件商店的插件，VSCode for web 会将支持 web 环境的插件的 "),t("code",[e._v("package.json")]),e._v(" 与 "),t("code",[e._v("extension.js")]),e._v(" 等文件打包成一个 zip 包，然后根据 publisher 分配合适的二级域名，通过 CDN 分发。")]),e._v(" "),t("p",[e._v("以我在使用的"),t("code",[e._v("One Dark Pro")]),e._v("主题为例：")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://zakum-1252497671.cos.ap-guangzhou.myqcloud.com/20230508145433.png",alt:"20230508145433"}})]),e._v(" "),t("p",[e._v("而在调试模式中，我们可以通过 "),t("code",[e._v("Install extension from location...")]),e._v("命令，指定编译后插件的 url，从而加载插件。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://zakum-1252497671.cos.ap-guangzhou.myqcloud.com/20230508143115.png",alt:"20230508143115"}})]),e._v(" "),t("p",[e._v("我们使用本地服务器，指定一个已编译好的 VSCode web extension，并填入本地服务器地址 ("),t("a",{attrs:{href:"https://localhost:5000",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://localhost:5000"),t("OutboundLink")],1),e._v(")，并刷新页面，那么从 Chrome 的 Network 中可以看到 VSCode 向目标位置请求了"),t("code",[e._v("package.json")]),e._v(" 与 "),t("code",[e._v("extension.js")]),e._v("，并看到插件已经被成功加载了。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://zakum-1252497671.cos.ap-guangzhou.myqcloud.com/20230508144906.png",alt:"20230508144906"}})]),e._v(" "),t("p",[e._v("通过这样的方式，VSCode for web 在每次页面打开后，完成了对用户自定义的插件管理与加载。并由于"),t("code",[e._v("web worker")]),e._v("的特性，每个插件的执行环境都是独立且相互隔离的。")]),e._v(" "),t("h2",{attrs:{id:"通过特殊-url-路由的方式的插件加载机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#通过特殊-url-路由的方式的插件加载机制"}},[e._v("#")]),e._v(" 通过特殊 url 路由的方式的插件加载机制")]),e._v(" "),t("p",[e._v("VSCode for web 最突出的特点是它是运行在浏览器上的，因此，我们可以利用 url，来实现一些奇妙的新特性。例如，通过特殊的 url 路由，免安装地加载插件。")]),e._v(" "),t("p",[e._v("目前，vscode.dev 可以使用这样的方式加载插件：")]),e._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("https://vscode.dev/+publisher.name\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("例如，在浏览器中输入 "),t("code",[e._v("https://vscode.dev/+ms-vscode.onedrive-browser")]),e._v(" 将加载 OneDrive 浏览器扩展。")]),e._v(" "),t("p",[e._v("当然，我们也可以使用同样的方式加载本地编译的插件。由于 vscode.dev 强制要求 "),t("code",[e._v("secure context")]),e._v(" ，因此，我们需要在本地启动一个 "),t("code",[e._v("https")]),e._v(" 的服务器，并对 url 进行 base64 编码，才能正常访问。")]),e._v(" "),t("p",[e._v("访问"),t("code",[e._v("https://vscode.dev/+aHR0cHM6Ly9sb2NhbGhvc3Q6MzAwMA==")]),e._v('即可。（后面那一段为"'),t("a",{attrs:{href:"https://localhost:3000",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://localhost:3000"),t("OutboundLink")],1),e._v('") 的 base64 编码）')]),e._v(" "),t("h2",{attrs:{id:"webopener-特性介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webopener-特性介绍"}},[e._v("#")]),e._v(" webOpener 特性介绍")]),e._v(" "),t("p",[e._v("有开发过 VSCode for desktop 的插件的同学应该知道，vscode 插件的所有能力都是在 "),t("code",[e._v("package.json")]),e._v(" 中声明的，这也是为什么 VSCode 除了需要加载入口的 "),t("code",[e._v("extension.js")]),e._v(" 外，还一定要加载插件的 "),t("code",[e._v("package.json")]),e._v(" 的原因。")]),e._v(" "),t("p",[e._v("在插件 "),t("code",[e._v("package.json")]),e._v(" 的 "),t("code",[e._v("contributes")]),e._v(" 字段中，我们可以声明插件的各种能力，例如，命令、菜单、快捷键、主题、语言、调试器等等。")]),e._v(" "),t("p",[e._v("对于 vscode for web 版本的插件来说，我们还可以声明 "),t("code",[e._v("webOpener")]),e._v(" 能力，其所有属性都是可选的。声明如下：")]),e._v(" "),t("div",{staticClass:"language-json line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"name"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"onedrive-browser"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"contributes"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"webOpener"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"scheme"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"onedrive"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"import"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"webOpener.js"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"runCommands"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"command"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"hello-world"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"args"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"$url"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n    ...\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br")])]),t("h3",{attrs:{id:"webopener-scheme"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webopener-scheme"}},[e._v("#")]),e._v(" webOpener.scheme")]),e._v(" "),t("p",[e._v("默认情况下，"),t("code",[e._v("vscode.dev/+publisher.name")]),e._v(" 路由将直接打开默认的 VSCode 示例工作区。但是，如果提供了 scheme path，则 VSCode 将根据路由参数打开一个以该协议打开 url 中后续 path 指向的文件夹，格式如下：")]),e._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 当 scheme 设置为 onedrive")]),e._v("\nhttps://vscode.dev/+publisher.name/remoteAuthority/path/segments/"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("例如，当插件 webOpener 的 scheme 设置为 onedrive 时，访问 "),t("code",[e._v("https://vscode.dev/+ms-vscode.onedrive-browser/myPersonalDrive/cool/folder")]),e._v(" ，此时访问 url 将重定向为 "),t("code",[e._v("onedrive:///myPersonalDrive/cool/folder")]),e._v("。")]),e._v(" "),t("p",[e._v("若此协议不在 VSCode 的内置协议中，我们可以在插件中通过 "),t("code",[e._v("vscode.workspace.registerFileSystemProvider")]),e._v(" 这个 API 注册自定义的 FileSystemProvider，从而实现对自定义协议的 FileSystem 支持。")]),e._v(" "),t("p",[e._v("本质上，它打开的方式与 VSCode for web 的 "),t("code",[e._v("vscode.open")]),e._v(" 命令也是一致的。")]),e._v(" "),t("h3",{attrs:{id:"webopener-runcommands"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webopener-runcommands"}},[e._v("#")]),e._v(" webOpener.runCommands")]),e._v(" "),t("p",[e._v("当 VSCode 的主 workbench 加载完毕后，会触发 "),t("code",[e._v("webOpener")]),e._v(" 的 "),t("code",[e._v("onDidCreateWorkbench")]),e._v(" 的钩子，并执行此处声明的命令集。")]),e._v(" "),t("p",[e._v("这将传入一个命令数组，例如："),t("code",[e._v('[{ "command": "test-extension.hello-world", "args": ["$url"] }]')]),e._v("，此时将可以执行自定义插件 "),t("code",[e._v("test-extension")]),e._v(" 的相关命令。")]),e._v(" "),t("p",[e._v("其中，"),t("code",[e._v("$url")]),e._v(" 指代当前页面 url。如果插件的初始化依赖来自 url 的 query/path 等等信息，这将很有用。")]),e._v(" "),t("h3",{attrs:{id:"webopener-import"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webopener-import"}},[e._v("#")]),e._v(" webOpener.import")]),e._v(" "),t("p",[e._v("这里定义了 webOpener 加载的入口点。它是一个相对于插件 package.json 的 ES Module 路径，例如："),t("code",[e._v("webOpener.js")]),e._v("。")]),e._v(" "),t("p",[e._v("它与 "),t("code",[e._v("extension.js")]),e._v(" 一样，默认导出一个 "),t("code",[e._v("doRoute")]),e._v(" 函数，该函数将获取 route 与 workbench 等信息（workbench 这个实例中提供了当前 vscode for web 的命令、日志、环境、window、workspace 等多种能力支持）。由于 "),t("code",[e._v("webOpener.js")]),e._v(" 运行在主线程中，因此它能做到的事情要比处于 web worker 下的 vscode for web 插件更多。")]),e._v(" "),t("p",[e._v("举一个例子，这是一个简单的 webOpener 贡献 onedrive-browser：")]),e._v(" "),t("div",{staticClass:"language-ts line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ts"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("export")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("default")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("doRoute")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("route"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// If we're not already opening a OneDrive, show the picker immediately")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// when the user hits `vscode.dev/+ms-vscode.onedrive-browser`.")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("route"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("workspace"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("folderUri"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("?.")]),e._v("scheme "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!==")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'onedrive'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    route"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("onDidCreateWorkbench"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("runCommands"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("push")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      command"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'onedrive-browser.openOneDrive'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      args"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br")])]),t("p",[e._v("它将在 workbench 加载完毕后，判断当前的 workspace 是否为 onedrive，如果不是，则执行 "),t("code",[e._v("onedrive-browser.openOneDrive")]),e._v(" 命令，从而打开 onedrive 文件夹。")]),e._v(" "),t("h2",{attrs:{id:"webopener-与插件的通信机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webopener-与插件的通信机制"}},[e._v("#")]),e._v(" webOpener 与插件的通信机制")]),e._v(" "),t("p",[e._v("在了解了 webOpener 的基本特性之后，我们来看看该如何利用这些特性，与我们的 web 插件进行通信，从而扩展插件能力。")]),e._v(" "),t("p",[e._v("我们可以看出，由于 webOpener 加载在主线程，且 doRoute 方法的执行时机在主线程 workbench 加载完毕之后，在请求远端插件并执行之前。因此，我们可以有两种方式来传递信息，与处于 web worker 下，与宿主隔离的插件进行通信。")]),e._v(" "),t("p",[e._v("第一种即为在 runCommands 中介绍的，通过执行 command 并传递 url 的方式传递初始化信息。该方式也是 webOpener 与插件通信的常用方式之一，用于为初始化插件时提供部分依赖参数。")]),e._v(" "),t("p",[e._v("第二种则是通过 doRoute 方法，捕获此时的请求信息，并根据请求信息的不同对插件能力进行不同的变更，但本质上还是通过 command 的方式给插件发送 args 来实现的。")]),e._v(" "),t("p",[e._v("我在当前最新版本的 vscode-dev 代码库中（1.79.0），并未发现直接通过 webOpener 暴露类似 postMessage 的与插件通信的方法，因此到目前为止，我们只能通过给插件的 command 方式触发 trigger 与传入参数这一种方式来实现与插件的通信。这导致了在 web 下插件的能力其实相当受限。")]),e._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),t("p",[e._v("本篇文章解析了在 VSCode for web 中的插件加载机制，以及如何通过 webOpener 特性来扩展插件的能力。")]),e._v(" "),t("p",[e._v("我们可以看出，在现阶段的 VSCode for web 中，插件的加载机制也仅仅只是做到了可用状态。由于 web worker 天然的与主线程隔离的特性，desktop 的很多好用的功能性插件（即除了 theme/key-binding 这种不需要执行逻辑的插件之外）在 web 端的支持还是会遇到很多问题，并不能无缝迁移。这点也是我在尝试开发 VSCode for web 插件时最大的痛点。")]),e._v(" "),t("p",[e._v("不过，随着 VSCode for web 项目仍在进行高频的开发与完善，希望未来的 VSCode for web 能在插件开发与使用上尽可能对齐甚至兼容 desktop 的体验。")]),e._v(" "),t("h2",{attrs:{id:"参考资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[e._v("#")]),e._v(" 参考资料")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/microsoft/vscode-dev",target:"_blank",rel:"noopener noreferrer"}},[e._v("VSCode dev Repository"),t("OutboundLink")],1),e._v(" （目前是私有仓库，需要向 Microsoft 申请权限，未来功能完善后或将开放）")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://code.visualstudio.com/docs/editor/vscode-web",target:"_blank",rel:"noopener noreferrer"}},[e._v("VSCode for the Web Introduction"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=a.exports}}]);